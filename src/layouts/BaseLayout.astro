---
import BaseHead from '@/components/BaseHead.astro'
import Footer from '@/components/layout/Footer.astro'
import Header from '@/components/layout/Header.astro'
import ThemeProvider from '@/components/ThemeProvider.astro'
import type { SiteMeta } from '@/types'
import { siteConfig } from '@/site-config'

// Import the global.css file here so that it is included on
// all pages through the use of the <BaseLayout /> component.
import '@/assets/styles/app.css'
import 'katex/dist/katex.min.css'
import 'remark-github-blockquote-alert/alert.css'

interface Props {
  meta: SiteMeta
  highlightColor?: string
}

const {
  meta: { articleDate, description = siteConfig.description, ogImage, title },
  highlightColor
} = Astro.props
---

<html lang={siteConfig.lang}>
  <head>
    <BaseHead articleDate={articleDate} description={description} ogImage={ogImage} title={title} />
  </head>

  <body class='flex justify-center bg-background'>
    {
      highlightColor && highlightColor != 'hsl(var(--primary) / var(--tw-text-opacity))' && (
        <div
          class='pointer-events-none absolute start-0 top-0 z-0 h-1/2 w-full opacity-25'
          style={{ backgroundImage: `linear-gradient(${highlightColor}, transparent)` }}
        />
      )
    }
    <ThemeProvider />
    <main
      class='z-10 flex min-h-screen w-screen max-w-[60rem] flex-col items-center px-4 pb-10 text-[0.92rem] leading-relaxed sm:px-7 lg:px-10'
    >
      <Header />
      <slot />
      <Footer />
    </main>
  </body>
<script>
  const showAvatarInstantly = () => {
    const avatar = document.querySelector('.avatar-hidden');
    if (avatar) {
      avatar.classList.remove('avatar-hidden');
      avatar.classList.add('avatar-visible');
    }
  };

  const revealAvatarWithAnimation = () => {
    const avatar = document.querySelector('.avatar-hidden');
    if (avatar) {
      avatar.classList.remove('avatar-hidden');
      avatar.classList.add('avatar-visible');
      sessionStorage.setItem('avatarShown', 'true');

      window.removeEventListener('click', revealAvatarWithAnimation);
      window.removeEventListener('scroll', revealAvatarWithAnimation);
      window.removeEventListener('keydown', revealAvatarWithAnimation);
    }
  };

  const initAvatarReveal = () => {
    if (sessionStorage.getItem('avatarShown') === 'true') {
      showAvatarInstantly(); // Avatar was already revealed in this session
    } else {
      // Wait for first user interaction to trigger animation
      window.addEventListener('click', revealAvatarWithAnimation);
      window.addEventListener('scroll', revealAvatarWithAnimation);
      window.addEventListener('keydown', revealAvatarWithAnimation);
    }
  };

  // Run on full load
  window.addEventListener('load', initAvatarReveal);

  // Also re-run on Astro client-side navigation
  document.addEventListener('astro:after-swap', initAvatarReveal);
</script>
</html>
