---
import { Image } from 'astro:assets'

import PageLayout from '@/layouts/BaseLayout.astro'
import Section from '@/components/home/Section.astro'
import Card from '@/components/Card.astro'
import ProjectCard from '@/components/home/ProjectCard.astro'
import Label from '@/components/home/Label.astro'
import SkillLayout from '@/components/home/SkillLayout.astro'
import Hitokoto from '@/components/home/Hitokoto.astro'
import PostPreview from '@/components/blog/PostPreview.astro'
import Button from '@/components/Button.astro'
import { siteConfig } from '@/site-config'
import { getAllPosts, sortMDByDate } from '@/utils'
import GithubCard from '@/components/GithubCard.astro'

import avatar from 'public/images/avatar.png'
// import avatar from '@/assets/avatar.gif'
// import avatar from '@/assets/avatar.mp4'
// const avatar = 'https://i.ibb.co/tMHhqz0/x4MpzLf.gif'; // Use your URL here

const languages = ['Html', 'JavaScript', 'CSS', 'Shell']
const frontend = ['TypeScript', 'Vite', 'Webpack', 'Astro']
const backend = ['Vercel', 'Waline']

const MAX_POSTS = 3
const allPosts = await getAllPosts()
const allPostsByDate = sortMDByDate(allPosts).slice(0, MAX_POSTS)
---

<style>
  @keyframes float {
    0% {
      transform: translateY(0);
    }
    50% {
      transform: translateY(-10px);
    }
    100% {
      transform: translateY(0);
    }
  }

  @keyframes borderColorChange {
    0% {
      border-left-color: #659EB9;
      border-right-color: #8E44AD;
    }
    50% {
      border-left-color: #8E44AD;
      border-right-color: #659EB9;
    }
    100% {
      border-left-color: #659EB9;
      border-right-color: #8E44AD;
    }
  }

  .float-avatar {
    animation: float 1.5s ease-in-out infinite, borderColorChange 3s linear infinite;
    border-left-width: 2px;
    border-right-width: 2px;
    border-style: solid;
  }
  .glitch{
  text-shadow: 
    0.05em 0 0 rgba(255, 0, 0, 0.75),
    -0.025em -0.05em 0 rgba(0, 255, 0, 0.75),
    0.025em 0.05em 0 rgba(0, 0, 255, 0.75);
  animation: glitch 500ms infinite;
}

  .glitch span{
    position: absolute;
    top: 0;
    botton:0;
    left: 0;
    right: 0;
  }

  .glitch span:first-child{
    animation: glitch 650ms infinite;
    z-index: 1;
    clip-path: polygon(0 50%, 100% 20%, 100% 100%, 0 100%);
    transform: translate(0px, 3px) rotate(-1deg);
    opacity: 0.8;
  }

  .glitch span:last-child{
    animation: glitch 450ms infinite;
    z-index: 10;
    clip-path: polygon(70% 10%, 100% 90%, 0% 10%, 100% 0%);
    transform: translate(-3px, 0px) rotate(1deg);
  }
  /*Animation effect for glitch*/
  @keyframes glitch {
    0% {
      text-shadow:
        0.05em 0 0 rgba(255, 0, 0, 0.75),
        -0.05em -0.025em 0 rgba(0, 255, 0, 0.75),
        -0.025em 0.05em 0 rgba(0, 0, 255, 0.75);
    }
    14% {
      text-shadow: 
        0.05em 0 0 rgba(255, 0, 0, 0.75),
        -0.05em -0.025em 0 rgba(0, 255, 0, 0.75),
        -0.025em 0.05em 0 rgba(0, 0, 255, 0.75);
    }
    15% {
      text-shadow: 
        -0.05em -0.025em 0 rgba(255, 0, 0, 0.75),
        0.025em 0.025em 0 rgba(0, 255, 0, 0.75),
        -0.05em -0.05em 0 rgba(0, 0, 255, 0.75);
    }
    49% {
      text-shadow: 
        -0.05em -0.025em 0 rgba(255, 0, 0, 0.75),
        0.025em 0.025em 0 rgba(0, 255, 0, 0.75),
        -0.05em -0.05em 0 rgba(0, 0, 255, 0.75);
    }
    50% {
      text-shadow: 
        0.025em 0.05em 0 rgba(255, 0, 0, 0.75),
        0.05em 0 0 rgba(0, 255, 0, 0.75),
        0 -0.05em 0 rgba(0, 0, 255, 0.75);
    }
    99% {
      text-shadow: 
        0.025em 0.05em 0 rgba(255, 0, 0, 0.75),
        0.05em 0 0 rgba(0, 255, 0, 0.75), 
        0 -0.05em 0 rgba(0, 0, 255, 0.75);
    }
    100% {
      text-shadow: 
        -0.025em 0 0 rgba(255, 0, 0, 0.75),
        -0.025em -0.025em 0 rgba(0, 255, 0, 0.75),
        -0.025em -0.05em 0 rgba(0, 0, 255, 0.75);
    }
  }

  .text-container > span {
    animation: glow 4s ease-in-out infinite;
    color: rgb(17, 17, 17, 0);
  }

  @keyframes glow {
    25% {
      color: #659EB9;
      text-shadow: 0 0 3px #0652DD, 0 0 6px #0652DD, 0 0 12px #0652DD;
    }
    
    0%, 100% {
      color: rgb(17, 17, 17, 0);
      text-shadow: none;
    }

    75% {
      color: #8E44AD;
      text-shadow: 0 0 3px #8E44AD, 0 0 6px #8E44AD, 0 0 12px #8E44AD;
    }
  }

  .text-container > span:nth-child(1) {
    animation-delay: 0s;
  }

  .text-container > span:nth-child(2) {
    animation-delay: 0.25s;
  }

  .text-container > span:nth-child(3) {
    animation-delay: 0.5s;
  }

  .text-container > span:nth-child(4) {
    animation-delay: 0.75s;
  }

  .text-container > span:nth-child(5) {
    animation-delay: 1s;
  }

  .text-container > span:nth-child(6) {
    animation-delay: 1.25s;
  }

  .text-container > span:nth-child(7) {
    animation-delay: 1.5s;
  }

  .text-container > span:nth-child(8) {
    animation-delay: 1.75s;
  }

  .text-container > span:nth-child(9) {
    animation-delay: 2s;
  }

  .text-container > span:nth-child(10) {
    animation-delay: 2.25s;
  }

  .text-container > span:nth-child(11) {
    animation-delay: 2.5s;
  }

  .avatar-hidden {
    opacity: 0;
    pointer-events: none;
    transition: opacity 1s ease;
  }

  .avatar-visible {
    opacity: 1;
    pointer-events: auto;
    transition: opacity 1s ease;
  }
</style>

<PageLayout meta={{ title: 'Home' }} highlightColor='#659EB966'>
  <div class='flex w-full flex-col gap-y-10 md:w-4/5 lg:w-5/6'>
    <section class='animate flex flex-col items-center gap-y-7'>
      <Image
        src={avatar}
        alt="profile"
        class="avatar-hidden h-96 w-auto rounded-full border-l-2 border-r-2 border-purple-400 float-avatar"
        loading="eager"
      />

      <div class='flex flex-col items-center gap-y-4'>
        <!-- <h1 class='text-4xl font-bold glitch'>{siteConfig.author}</h1> -->
        <h1 class='text-container text-6xl font-bold'>
          <span>w</span>
          <span>i</span>
          <span>t</span>
          <span>c</span>
          <span>h</span>
          <span>h</span>
          <span>u</span>
          <span>n</span>
          <span>t</span>
          <span>e</span>
          <span>d</span>
        </h1>
        <div class='flex flex-wrap justify-center gap-x-7 gap-y-3'>
          <Label title='P4P Yapper'>
            <svg class='size-5' slot='icon'>
              <use href='/icons/social.svg#mingcute-bling-line'></use>
            </svg>
          </Label>
        </div>
      </div>
    </section>
    {
      allPostsByDate.length > 0 && (
        <Section title='Recent Posts'>
          <ul class='flex flex-col gap-y-1.5 sm:gap-y-2'>
            {allPostsByDate.map((p) => (
              <li class='flex flex-col gap-x-2 sm:flex-row'>
                {/* @ts-ignore */}
                <PostPreview post={p} />
              </li>
            ))}
          </ul>
          <Button title='More posts' class='w-fit self-end' href='/blog' style='ahead' />
        </Section>
      )
    }
  </div>
<script>
  const showAvatarInstantly = () => {
    const avatar = document.querySelector('.avatar-hidden');
    if (avatar) {
      avatar.classList.remove('avatar-hidden');
      avatar.classList.add('avatar-visible');
    }
  };

  const revealAvatarWithAnimation = () => {
    const avatar = document.querySelector('.avatar-hidden');
    if (avatar) {
      avatar.classList.remove('avatar-hidden');
      avatar.classList.add('avatar-visible');
      sessionStorage.setItem('avatarShown', 'true');

      window.removeEventListener('click', revealAvatarWithAnimation);
      window.removeEventListener('scroll', revealAvatarWithAnimation);
      window.removeEventListener('keydown', revealAvatarWithAnimation);
    }
  };

  const initAvatarReveal = () => {
    if (sessionStorage.getItem('avatarShown') === 'true') {
      showAvatarInstantly(); // Avatar was already revealed in this session
    } else {
      // Wait for first user interaction to trigger animation
      window.addEventListener('click', revealAvatarWithAnimation);
      window.addEventListener('scroll', revealAvatarWithAnimation);
      window.addEventListener('keydown', revealAvatarWithAnimation);
    }
  };

  // Run on full load
  window.addEventListener('load', initAvatarReveal);

  // Also re-run on Astro client-side navigation
  document.addEventListener('astro:after-swap', initAvatarReveal);
</script>
</PageLayout>
